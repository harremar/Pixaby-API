{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\13174\\\\OneDrive\\\\Desktop\\\\reactapp-picturesearch\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ImageCard from \"./components/imageCard\";\nimport ImageSearch from \"./components/imageSearch\";\nimport Modal from \"./components/modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [term, setTerm] = useState(\"\");\n  const [showModal, setShowModal] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(false);\n  useEffect(() => {\n    fetch(`https://pixabay.com/api/?key=${process.env.REACT_APP_PIXABAY_API_KEY}&q=${term}&image_type=photo&pretty=true`).then(res => res.json()).then(data => {\n      setImages(data.hits);\n      setIsLoading(false);\n    }).catch(err => console.log(err));\n  }, [term]);\n  const handleimageClick = image => {\n    setSelectedImage(image);\n    setShowModal(true);\n  };\n  const handleCloseModal = () => {\n    setShowModal(false);\n    setSelectedImage(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 mb-5\",\n    children: [/*#__PURE__*/_jsxDEV(ImageSearch, {\n      searchText: text => setTerm(text)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), !isLoading && images.length === 0 && /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-5xl text-center mx-auto mt-32\",\n      children: \"No Images Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-6xl text-center mx-auto mt-32\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\",\n        children: images.map(image => /*#__PURE__*/_jsxDEV(ImageCard, {\n          image: image,\n          onClick: handleimageClick\n        }, image.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      showModal: showModal,\n      image: selectedImage,\n      onClose: handleCloseModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Jmf1h78LjSrQNfvFp9yEJ4GI4VA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ImageCard","ImageSearch","Modal","jsxDEV","_jsxDEV","App","_s","images","setImages","isLoading","setIsLoading","term","setTerm","showModal","setShowModal","selectedImage","setSelectedImage","fetch","process","env","REACT_APP_PIXABAY_API_KEY","then","res","json","data","hits","catch","err","console","log","handleimageClick","image","handleCloseModal","className","children","searchText","text","fileName","_jsxFileName","lineNumber","columnNumber","length","map","onClick","id","onClose","_c","$RefreshReg$"],"sources":["C:/Users/13174/OneDrive/Desktop/reactapp-picturesearch/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ImageCard from \"./components/imageCard\";\nimport ImageSearch from \"./components/imageSearch\";\nimport Modal from \"./components/modal\";\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [term, setTerm] = useState(\"\");\n  const [showModal, setShowModal] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(false);\n\n  useEffect(() => {\n    fetch(\n      `https://pixabay.com/api/?key=${process.env.REACT_APP_PIXABAY_API_KEY}&q=${term}&image_type=photo&pretty=true`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        setImages(data.hits);\n        setIsLoading(false);\n      })\n      .catch((err) => console.log(err));\n  }, [term]);\n\n  const handleimageClick = (image) => {\n    setSelectedImage(image);\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n    setSelectedImage(null);\n  };\n\n  return (\n    <div className=\"container mx-auto px-4 mb-5\">\n      <ImageSearch searchText={(text) => setTerm(text)} />\n\n      {!isLoading && images.length === 0 && (\n        <h1 className=\"text-5xl text-center mx-auto mt-32\">No Images Found</h1>\n      )}\n      {isLoading ? (\n        <h1 className=\"text-6xl text-center mx-auto mt-32\">Loading...</h1>\n      ) : (\n        <div className=\"flex justify-center\">\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\n            {images.map((image) => (\n              <ImageCard\n                key={image.id}\n                image={image}\n                onClick={handleimageClick}\n              />\n            ))}\n          </div>\n        </div>\n      )}\n      <Modal\n        showModal={showModal}\n        image={selectedImage}\n        onClose={handleCloseModal}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAEzDC,SAAS,CAAC,MAAM;IACdkB,KAAK,CACH,gCAAgCC,OAAO,CAACC,GAAG,CAACC,yBAAyB,MAAMT,IAAI,+BACjF,CAAC,CACEU,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACdhB,SAAS,CAACgB,IAAI,CAACC,IAAI,CAAC;MACpBf,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,CACDgB,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACrC,CAAC,EAAE,CAAChB,IAAI,CAAC,CAAC;EAEV,MAAMmB,gBAAgB,GAAIC,KAAK,IAAK;IAClCf,gBAAgB,CAACe,KAAK,CAAC;IACvBjB,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMkB,gBAAgB,GAAGA,CAAA,KAAM;IAC7BlB,YAAY,CAAC,KAAK,CAAC;IACnBE,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,oBACEZ,OAAA;IAAK6B,SAAS,EAAC,6BAA6B;IAAAC,QAAA,gBAC1C9B,OAAA,CAACH,WAAW;MAACkC,UAAU,EAAGC,IAAI,IAAKxB,OAAO,CAACwB,IAAI;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAEnD,CAAC/B,SAAS,IAAIF,MAAM,CAACkC,MAAM,KAAK,CAAC,iBAChCrC,OAAA;MAAI6B,SAAS,EAAC,oCAAoC;MAAAC,QAAA,EAAC;IAAe;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CACvE,EACA/B,SAAS,gBACRL,OAAA;MAAI6B,SAAS,EAAC,oCAAoC;MAAAC,QAAA,EAAC;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAElEpC,OAAA;MAAK6B,SAAS,EAAC,qBAAqB;MAAAC,QAAA,eAClC9B,OAAA;QAAK6B,SAAS,EAAC,sDAAsD;QAAAC,QAAA,EAClE3B,MAAM,CAACmC,GAAG,CAAEX,KAAK,iBAChB3B,OAAA,CAACJ,SAAS;UAER+B,KAAK,EAAEA,KAAM;UACbY,OAAO,EAAEb;QAAiB,GAFrBC,KAAK,CAACa,EAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGd,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,eACDpC,OAAA,CAACF,KAAK;MACJW,SAAS,EAAEA,SAAU;MACrBkB,KAAK,EAAEhB,aAAc;MACrB8B,OAAO,EAAEb;IAAiB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAClC,EAAA,CA1DQD,GAAG;AAAAyC,EAAA,GAAHzC,GAAG;AA4DZ,eAAeA,GAAG;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}